<?xml version="1.0"?>
<launch>
  ## Upload robot description
  <include file="$(find pluto_description)/launch/upload_pluto.launch"/>

  ## Launch state publisher
  <rosparam file="$(find pluto_bringup)/config/joint_state_publisher.yaml" command="load"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen"/>

  ## Launch Volksbot driver
  <node name="volksbot" pkg="volksbot_driver" type="volksbot" respawn="false" output="screen">
      <remap from="joint_states" to="volksbot_joint_states" />
      <param name="wheel_radius" type="double" value="0.103" />
      <param name="axis_length" type="double" value="0.55" />
      <param name="gear_ratio" type="int" value="156" />
      <param name="turning_adaptation" type="double" value="0.67" />
      <param name="cov_xrotation" type="double" value="0.0" />
      <param name="cov_yrotation" type="double" value="0.0" />
      <param name="rotation_stddev" type="double" value="0.2" />
      <!-- default values: -->
      <!--
      <param name="turning_adaptation" type="double" value="0.95" />
      <param name="x_stddev" type="double" value="0.002" />
      <param name="rotation_stddev" type="double" value="0.017" />
      <param name="cov_xy" type="double" value="0.0" />
      <param name="cov_xrotation" type="double" value="0.0" />
      <param name="cov_yrotation" type="double" value="0.0" />
      <param name="publish_tf" type="bool" value="False" />
      -->
   </node>

  ## Launch IMU
  <include file="$(find pluto_bringup)/launch/phidgets_imu.launch"/>

  ## Launch Velodyne
  <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch"/>

  ## Launch Riegl driver
  <include file="$(find riegl_driver)/launch/riegl_vz400i.launch">
    <arg name="min_range" value="1.0"/>
    <arg name="address" value="192.168.178.35"/>
  </include>

  ## Launch hyperspectral camera
  <!--
  <include file="$(find hyperspectral_calibration)/launch/colorize_cloud.launch">
    <arg name="use_rgb_only" value="false"/>
  </include>
  -->

  ## Launch robot localization
  <include file="$(find pluto_bringup)/launch/ekf_rl.launch"/>

  ## Launch reconstruction
  <include file="$(find lvr_ros)/launch/reconstruction.launch"/>

  ## Launch costmap calculation
  <include file="$(find mesh_navigation)/launch/cost_calculation.launch"/>

  ## Launch map server
  <node name="mesh_map_server" pkg="mesh_map_server" type="mesh_map_server" output="screen"/>

  ## Launch exploration
  <node name="exploration" pkg="exploration" type="exploration" output="screen"/>

  ## Launch move_base_flex
  <include file="$(find mesh_navigation)/launch/navigation.launch"/>

  ## Launch point cloud server
  <include file="$(find pluto_bringup)/launch/pc_server.launch"/>

  ## Launch teleop
  <!-- <include file="$(find pluto_bringup)/launch/ps3joy.launch"/> -->

  ## Launch battery life
  <!-- <include file="$(find battery_life)/launch/battery_life.launch"/> -->

  ## Launch levers
  <!--  <include file="$(find pluto_levers)/launch/lever.launch"/> -->

  ## Launch sounds
  <include file="$(find pluto_bringup)/launch/sounds.launch"/>
</launch>
